name: CI - Test Homework with Docker (AMD64)

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-homework:
    runs-on: ubuntu-latest

    # ——————————————————————————————————————————————————————————————————————
    # Esta sección es opcional pero aconsejada: fuerza a Docker a "interesarse"
    # por manifestos amd64 cuando intente hacer pull de imágenes multi-arquitectura.
    env:
      DOCKER_DEFAULT_PLATFORM: linux/amd64
    # ——————————————————————————————————————————————————————————————————————

    steps:
      # 1) Checkout de tu propio repositorio (el que contiene tests/ y test_homework.py).
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2) Instala Python (aquí usamos 3.10, pero puedes cambiarlo)
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      # 3) Instala MLflow y pytest para poder ejecutar los tests
      - name: Install mlflow & pytest
        run: |
          python -m pip install --upgrade pip
          pip install mlflow pytest

      # 4) Clona el repositorio remoto “mlflow-wine-quality” en un subdirectorio “wine-quality”
      - name: Clone mlflow-wine-quality project
        run: |
          git clone https://github.com/jdvelasq/mlflow-wine-quality.git wine-quality

      # 5) Construye localmente la imagen Docker para AMD64 y etiqué­tala como "jdvelasq/mlflow:example"
      #    de modo que MLflow la pueda usar más tarde (y no intente bajarla desde Docker Hub en ARM64).
      - name: Build Docker image (amd64)
        run: |
          cd wine-quality
          docker build --platform linux/amd64 -t jdvelasq/mlflow:example .

      # 6) Finalmente, ejecuta pytest. Dado que ya existe
      #    “jdvelasq/mlflow:example” local en la arquitectura correcta, cuando el test
      #    haga “mlflow run https://… -e knn -P …”, MLflow va a hallarla local y la
      #    ejecutará sin intentar descargar la variante ARM.
      - name: Run tests
        run: pytest -q
